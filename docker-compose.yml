version: '3.5'
services:
  agent: # The new agent, no actual llm required
    build: ./agent
    container_name: agent
    ports:
      - "10000:10000"
      - "8000:8000"
    environment:
      - MEMORY
      - OPENAI_API_KEY
      - OPENAI_API_TYPE
      - OPENAI_API_BASE
      - OPENAI_API_VERSION
      - OPENAI_DEPLOYMENT_NAME
      - GOOGLE_API_KEY
      - GOOGLE_CSE_ID
      - WOLFRAM_ALPHA_APPID
      - APIFY_API_TOKEN

    # volumes:
    #   - ./volumes/gpt4all:/models

  # gpt4all: # A local model, to run cheaper if you have the hardware
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: 1
  #             capabilities: [gpu]
  #   build: ./gpt4all
  #   container_name: gpt4all
  #   ports:
  #     - "8766:8766"
  #   volumes:
  #     - ./volumes/gpt4all:/models

  webui: # The (currently web) interface for the assistant
    build: ./webui
    container_name: webui
    ports:
      - "3000:3000"
    environment:
      MILVUS_HOST: standalone
      DALAI_HOST: dalai
      GPT4ALL_HOST: gpt4all

#   dalai: # An optional model
#     build: ./dalai
#     container_name: dalai
#     ports:
#       - "3000:3000"
#     volumes:
#       - ./volumes/dalai/alpaca:/root/dalai/alpaca
#       - ./volumes/dalai/llama:/root/dalai/llama

  # etcd: # Part of milvus
  #   container_name: milvus-etcd
  #   image: quay.io/coreos/etcd:v3.5.0
  #   environment:
  #     - ETCD_AUTO_COMPACTION_MODE=revision
  #     - ETCD_AUTO_COMPACTION_RETENTION=1000
  #     - ETCD_QUOTA_BACKEND_BYTES=4294967296
  #     - ETCD_SNAPSHOT_COUNT=50000
  #   volumes:
  #     - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
  #   command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd

  # minio: # Part of milvus
  #   container_name: milvus-minio
  #   image: minio/minio:RELEASE.2023-03-20T20-16-18Z
  #   environment:
  #     MINIO_ACCESS_KEY: minioadmin
  #     MINIO_SECRET_KEY: minioadmin
  #   volumes:
  #     - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
  #   command: minio server /minio_data
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
  #     interval: 30s
  #     timeout: 20s
  #     retries: 3

  # standalone: # Part of milvus
  #   container_name: milvus-standalone
  #   image: milvusdb/milvus:v2.2.5
  #   command: ["milvus", "run", "standalone"]
  #   environment:
  #     ETCD_ENDPOINTS: etcd:2379
  #     MINIO_ADDRESS: minio:9000
  #   volumes:
  #     - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
  #   ports:
  #     - "19530:19530"
  #     - "9091:9091"
  #   depends_on:
  #     - "etcd"
  #     - "minio"

  # motorhead: # Memory
  #   container_name: motorhead
  #   image: ghcr.io/getmetal/motorhead:latest
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - PORT=8080
  #     - REDIS_URL=redis://redis:6379
  #     - MOTORHEAD_LONG_TERM_MEMORY=True
  #     - OPENAI_API_KEY
  #   depends_on:
  #     - "redis"

  redis:
    container_name: redis
    image: redis/redis-stack:latest
    restart: always
    ports:
      - '6379:6379'
    volumes: 
      - redis:/data

volumes:
  redis:
    driver: local